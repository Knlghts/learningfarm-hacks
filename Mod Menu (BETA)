    function createElement(node, props = {}, ...children) {
                const element = document.createElement(node);
                if (typeof props.style == "object") {
                    let result = "";
                    for (const style in props.style) result += `${style.replace(/[A-Z]/g, match => `-${match.toLowerCase()}`)}: ${props.style[style]}; `;
                    props.style = result;
                }
                for (const prop in props) element[prop] = props[prop];
                for (const child of children) element.append(child);
                return element;
            }
            let settings;
            const Settings = {
                data: null,
                setItem(k, v) {
                    k.split('.').reduce((obj, k, i, a) => (++i == a.length && (obj[k] = v), obj[k]), this.data);
                    localStorage.setItem("JODGUISettings", JSON.stringify(this.data));
                    return this.data;
                },
                deleteItem(k) {
                    k.split('.').reduce((obj, k, i, a) => (++i == a.length && (delete obj[k]), obj[k]), this.data);
                    localStorage.setItem("JODGUISettings", JSON.stringify(this.data));
                    return this.data;
                },
                setData(v) {
                    this.data = v;
                    localStorage.setItem("JODGUISettings", JSON.stringify(this.data));
                }
            }
            try {
                Settings.data = JSON.parse(localStorage.getItem("JODGUISettings") || "{}");
                for (const setting of ["backgroundColor", "cheatList", "contentBackground", "defaultButton", "disabledButton", "enabledButton", "infoColor", "inputColor", "textColor"]) if (Settings.data[setting]) {
                    Settings.setItem(`theme.${setting}`, Settings.data[setting]);
                    Settings.deleteItem(setting);
                }
            } catch {
                Settings.setData({});
            /* // localStorage.setItem("JODGUISettings", "{}"); */
            /* // settings = {}; */
            }
            let variables, gui, cheatContainer, controls, controlButtons, dragButton, content, tooltip, cheats, headerText;
            const guiWrapper = createElement("div", {
                id: "JODGUI", style: {
                    top: `${(Math.max(10, window.innerHeight - 600) / 2)}px`,
                    left: `${(Math.max(10, window.innerWidth - 1000) / 2)}px`,
                    transform: `scale(${Settings.data.scale})`,
                    position: "fixed", height: "80%", width: "80%", maxHeight: "600px", maxWidth: "1000px", zIndex: "999", display: "block",
                }
            },
            /* // variables.sheet.cssRules[0].style.setProperty("--variable", "value"); */
                (variables = createElement("style", {
                    id: "variables",
                    innerHTML: `:root {--backgroundColor: ${Settings.data?.theme?.backgroundColor || "rgb(11, 194, 207)"};--infoColor: ${Settings.data?.theme?.infoColor || "#9a49aa"};--cheatList: ${Settings.data?.theme?.cheatList || "#9a49aa"};--defaultButton: ${Settings.data?.theme?.defaultButton || "#9a49aa"};--disabledButton: ${Settings.data?.theme?.disabledButton || "#A02626"};--enabledButton: ${Settings.data?.theme?.enabledButton || "#47A547"};--textColor: ${Settings.data?.theme?.textColor || "white"};--inputColor: ${Settings.data?.theme?.inputColor || "#7a039d"};--contentBackground: ${Settings.data?.theme?.contentBackground || "rgb(64, 17, 95)"};}`
                })),
                createElement("style", {
                    innerHTML: `.alertList::-webkit-scrollbar{display:none;}.alertList{-ms-overflow-style: none;scrollbar-width: none;}.contentWrapper::-webkit-scrollbar{display:none;}.contentWrapper{-ms-overflow-style: none;scrollbar-width: none;}.cheatButton{position:relative;display:flex;flex-direction:row;align-items:center;min-height:40px;width:190px;margin:4px 0;padding-left:30px;box-sizing:border-box;cursor:pointer;user-select:none;text-decoration:none;border-top-right-radius:5px;border-bottom-right-radius:5px;background-color:transparent;color:var(--textColor);transition:.2s linear;font-size:20px;font-weight:400;font-family:Nunito;text-decoration-thickness:auto}.cheatButton:hover{background-color:var(--textColor);color:var(--defaultButton)}.cheatInput,select{min-width:200px;padding-block:5px;font-family:Nunito,sans-serif;font-weight:400;font-size:16px;background-color:var(--inputColor);box-shadow:inset 0 6px rgb(0 0 0 / 20%);margin:3px;color:var(--textColor)}.bigButton:hover{filter:brightness(110%);transform:translateY(-2px)}.bigButton:active{transform:translateY(2px)}.cheatList::-webkit-scrollbar{width:10px}.cheatList::-webkit-scrollbar-track{background:var(--cheatList)}.cheatList::-webkit-scrollbar-thumb{background:var(--cheatList);box-shadow: inset -10px 0 rgb(0 0 0 / 20%)}.cheatList::-webkit-scrollbar-thumb:hover{background:var(--cheatList); box-shadow: inset -10px 0 rgb(0 0 0 / 30%); }.scriptButton:hover{filter:brightness(120%)}.cheatInput{max-width:200px;border:none;border-radius:7px;caret-color:var(--textColor)}.cheatInput::placeholder{color:var(--textColor)}.cheatInput:focus,select:focus{outline:0}.cheatInput::-webkit-inner-spin-button,.cheatInput::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.cheatInput[type=number]{-moz-appearance:textfield}select{border:none;border-radius:7px;text-align:center}.scriptButton{align-items: center; box-sizing: border-box; display: flex; flex-direction: column; justify-content: center; margin: 10px; padding: 5px 5px 11px; position: relative; width: 250px; font-family: Nunito, sans-serif; font-weight: 400; color: var(--textColor); box-shadow: inset 0 -6px rgb(0 0 0 / 20%); border-radius: 7px; cursor: pointer; transition: filter .25s;}.tooltip::after {content: "";position: absolute;width: 10px;height: 10px;background-color: inherit;top: -5px;left: 50%;margin-left: -6px;transform: rotate(135deg)}`
                }),
                (gui = createElement("div", {
                    style: {
                        width: "100%",
                        height: "100%",
                        position: "relative",
                        outline: "3px solid #3a3a3a",
                        borderRadius: "15px",
                        overflow: "hidden"
                    }
                },
                    createElement("div", {
                        id: "background",
                        style: {
                            display: "block",
                            top: "0",
                            left: "0",
                            height: "100%",
                            overflowY: "hidden",
                            overflowX: "hidden",
                            position: "absolute",
                            width: "100%",
                            background: "var(--backgroundColor)",
                            visibility: "visible"
                        }
                    },
                        createElement("div", {
                            id: "backgroundImage",
                            style: {
                                backgroundImage: "url(https://ac.blooket.com/dashboard/65a43218fd1cabe52bdf1cda34613e9e.png)",
                                display: "block",
                                height: "200%",
                                position: "absolute",
                                width: "200%",
                                top: "50%",
                                left: "50%",
                                backgroundPositionX: "-100px",
                                backgroundPositionY: "-100px",
                                backgroundSize: "550px",
                                visibility: "visible",
                                transform: "translate(-50%,-50%) rotate(15deg)",
                                appearance: "none",
                                opacity: "0.175"
                            }
                        })),
                    (controls = createElement("div", {
                        id: "controls",
                        style: {
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingBottom: "8px",
                            paddingInline: "15px",
                            position: "absolute",
                            left: "220px",
                            top: "0",
                            visibility: "visible",
                            zIndex: "5",
                            height: "52px",
                            width: "max-content",
                            background: "var(--infoColor)",
                            boxShadow: "inset 0 -8px rgb(0 0 0 / 20%), 0 0 4px rgb(0 0 0 / 15%)",
                            borderBottomRightRadius: "10px",
                            color: "var(--textColor)",
                            fontFamily: "Nunito, sans-serif",
                            fontWeight: "700",
                            userSelect: "text"
                        },
                        innerText: (({ ctrl: ctrlHide, shift: shiftHide, alt: altHide, key: keyHide } = { ctrl: true, key: "e" }, { ctrl: ctrlClose, shift: shiftClose, alt: altClose, key: keyClose } = { ctrl: true, key: "x" }) => `${[ctrlHide && "Ctrl", shiftHide && "Shift", altHide && "Alt", keyHide && keyHide.toUpperCase()].filter(Boolean).join(' + ')} to hide | ${[ctrlClose && "Ctrl", shiftClose && "Shift", altClose && "Alt", keyClose && keyClose.toUpperCase()].filter(Boolean).join(' + ')} for quick disable\nClick and drag here`)(Settings.data.hide || { ctrl: true, key: "e" }, Settings.data.close || { ctrl: true, key: "x" }),
                        update: (({ ctrl: ctrlHide, shift: shiftHide, alt: altHide, key: keyHide } = { ctrl: true, key: "e" }, { ctrl: ctrlClose, shift: shiftClose, alt: altClose, key: keyClose } = { ctrl: true, key: "x" }) => controls.innerText = `${[ctrlHide && "Ctrl", shiftHide && "Shift", altHide && "Alt", keyHide && keyHide.toUpperCase()].filter(Boolean).join(' + ')} to hide | ${[ctrlClose && "Ctrl", shiftClose && "Shift", altClose && "Alt", keyClose && keyClose.toUpperCase()].filter(Boolean).join(' + ')} for quick disable\nClick and drag here`)
                    })),
                    createElement("div", {
                        id: "credits",
                        style: {
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            paddingBottom: "8px",
            /* // flexDirection: "row", */
                            position: "absolute",
                            right: "0",
                            top: "0",
                            visibility: "visible",
                            zIndex: "5",
                            height: "47px",
                            width: "280px",
                            background: "var(--infoColor)",
                            boxShadow: "inset 0 -8px rgb(0 0 0 / 20%), 0 0 4px rgb(0 0 0 / 15%)",
                            borderBottomLeftRadius: "10px",
                            color: "var(--textColor)",
                            fontFamily: "Nunito, sans-serif",
                            fontWeight: "700",
                            userSelect: "text"
                        },
                        innerHTML: "Created by knlghts on github."
                    }),
                    (controlButtons = createElement("div", {
                        id: "controlButtons",
                        style: {
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
            /* // paddingBottom: "8px", */
            /* // flexDirection: "row", */
                            position: "absolute",
                            right: "0",
                            bottom: "0",
                            visibility: "visible",
                            zIndex: "5",
                            height: "55px",
                            width: "165px",
                            background: "#none",
            /* // boxShadow: "inset 0 -8px rgb(0 0 0 / 20%), 0 0 4px rgb(0 0 0 / 15%)", */
                            borderLeft: "3px solid black",
                            borderTop: "3px solid black",
                            borderTopLeftRadius: "10px",
                            color: "white",
                            fontFamily: "Nunito, sans-serif",
                            fontWeight: "700",
                            userSelect: "text",
                            overflow: "hidden",
                            pointerEvents: "all"
                        }
                    },
                        (dragButton = createElement("button", {
                            style: {
                                height: "55px",
                                width: "55px",
                                fontFamily: "Nunito",
                                color: "white",
                                backgroundColor: "#00a0ff",
                                border: "none",
                                fontSize: "2rem",
            /* // fontWeight: "bolder", */
                                cursor: "move"
                            },
                            innerHTML: "✥"
                        })),
                        createElement("button", {
                            style: {
                                height: "55px",
                                width: "55px",
                                fontFamily: "Nunito",
                                color: "white",
                                backgroundColor: "grey",
                                border: "none",
                                fontSize: "2rem",
                                fontWeight: "bolder",
                                cursor: "pointer"
                            },
                            innerHTML: "-",
                            onclick: (function () {
                                let hidden = false;
                                return () => {
                                    for (let child of [...gui.children]) {
                                        if (child == controlButtons) continue;
                                        if (hidden) child.style.display = child.style._display;
                                        else {
                                            child.style._display = child.style.display;
                                            child.style.display = "none";
                                        }
                                    };
                                    gui.style.height = hidden ? "100%" : "55px";
                                    gui.style.width = hidden ? "100%" : "165px";
                                    guiWrapper.style.top = `${parseInt(guiWrapper.style.top) + (guiWrapper.offsetHeight - 55) * (hidden ? -1 : 1)}px`;
                                    guiWrapper.style.left = `${parseInt(guiWrapper.style.left) + (guiWrapper.offsetWidth - 165) * (hidden ? -1 : 1)}px`;
                                    guiWrapper.style.pointerEvents = hidden ? "unset" : "none";
                                    hidden = !hidden;
                                };
                            })()
                        }),
                        createElement("button", {
                            style: {
                                height: "55px",
                                width: "55px",
                                fontFamily: "Nunito",
                                color: "white",
                                backgroundColor: "red",
                                border: "none",
                                fontSize: "2rem",
                                fontWeight: "bolder",
                                cursor: "pointer"
                            },
                            innerHTML: "X",
                            onclick: close
                        }))),
                    (cheatContainer = createElement("div", {
                        className: "cheatList",
                        style: {
                            overflowY: "scroll",
                            background: "var(--cheatList)",
                            boxShadow: "inset -10px 0 rgb(0 0 0 / 20%)",
                            zIndex: "5",
                            width: "220px",
                            position: "absolute",
                            top: "0",
                            left: "0",
                            height: "100%",
                            fontFamily: "Titan One",
                            color: "var(--textColor)",
                            fontSize: "40px",
                            textAlign: "center",
                            paddingTop: "20px",
                            userSelect: "none",
                            padding: "20px 10px 20px 0",
                            boxSizing: "border-box",
                            display: "flex",
                            flexDirection: "column"
                        },
                        innerHTML: "<span style=\"text-shadow: 1px 1px rgb(0 0 0 / 40%)\">Cheats</span>"
                    },
                        createElement("a", {
                            className: "bigButton",
                            style: {
                                cursor: "pointer",
                                display: "block",
                                fontFamily: "Titan One",
                                margin: "20px auto 10px",
                                position: "relative",
                                transition: ".25s",
                                textDecoration: "none",
                                userSelect: "none",
                                visibility: "visible"
                            },
                            target: "_blank",
                            href: "https://github.com/Knlghts/learningfarm-hacks",
                            innerHTML: `<div style="background: rgba(0,0,0,.25); border-radius: 5px; display: block; width: 100%; height: 100%; left: 0; top: 0; position: absolute; transform: translateY(2px); width: 100%; transition: transform .6s cubic-bezier(.3,.7,.4,1)"></div>
                <div style="background-color: rgb(11, 194, 207); filter: brightness(.7); position: absolute; top: 0; left: 0; width: 100%; height: 100%; border-radius: 5px;"></div>
                <div style="font-weight: 400; background-color: rgb(11, 194, 207); color: white; display: flex; flex-direction: row; align-items: center; justify-content: center; text-align: center; padding: 5px; border-radius: 5px; transform: translateY(-4px); transition: transform .6s cubic-bezier(.3,.7,.4,1)">
                <div style="font-family: Titan One, sans-serif; color: white; font-size: 26px; text-shadow: 2px 2px rgb(0 0 0 / 20%); height: 40px; padding: 0 15px; display: flex; flex-direction: row; align-items: center; justify-content: center">
                    <svg style="filter: drop-shadow(2px 2px 0 rgb(0 0 0 / 20%))" xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" viewBox="0 -1 21 16">
                        <path d="M13.545 2.907a13.227 13.227 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.19 12.19 0 0 0-3.658 0 8.258 8.258 0 0 0-.412-.833.051.051 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.041.041 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032c.001.014.01.028.021.037a13.276 13.276 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019c.308-.42.582-.863.818-1.329a.05.05 0 0 0-.01-.059.051.051 0 0 0-.018-.011 8.875 8.875 0 0 1-1.248-.595.05.05 0 0 1-.02-.066.051.051 0 0 1 .015-.019c.084-.063.168-.129.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.052.052 0 0 1 .053.007c.08.066.164.132.248.195a.051.051 0 0 1-.004.085 8.254 8.254 0 0 1-1.249.594.05.05 0 0 0-.03.03.052.052 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.235 13.235 0 0 0 4.001-2.02.049.049 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.034.034 0 0 0-.02-.019Zm-8.198 7.307c-.789 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612Zm5.316 0c-.788 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612Z"/>
                    </svg>
                    Github
                </div>
                </div>`
                        }))), createElement("div", {
                            className: "contentWrapper",
                            style: {
                                position: "absolute",
                                left: "220px",
                                top: "70px",
                                overflowY: "scroll",
                                width: "calc(100% - 220px)",
                                height: "calc(100% - 70px)",
                                borderRadius: "7px"
                            }
                        },
                            (content = createElement("div", {
                                id: "content",
                                style: {
                                    position: "absolute",
                                    inset: "27px 50px 50px 50px"
            /* // display: "flex", */
            /* // alignItems: "stretch, */
            /* // margin: "50px", */
            /* // backgroundColor: "#8000ff" */
                                }
                            },
                                (tooltip = createElement("div", {
                                    className: "tooltip",
                                    style: {
                                        position: "absolute",
                                        top: "0",
                                        left: "0",
                                        backgroundColor: "black",
                                        height: "fit-content",
                                        maxWidth: "300px",
                                        zIndex: "5",
                                        borderRadius: "7.5px",
                                        color: "white",
                                        display: "flex",
                                        justifyContent: "center",
                                        alignItems: "center",
                                        padding: "5px",
                                        paddingInline: "15px",
                                        pointerEvents: "none",
                                        opacity: "0",
                                        textAlign: "center"
                                    },
                                    innerText: "description"
                                })),
                                (cheats = createElement("div", {
                                    style: {
                                        alignItems: "center",
                                        boxSizing: "border-box",
                                        display: "flex",
                                        flexDirection: "row",
                                        flexWrap: "wrap",
                                        justifyContent: "space-evenly",
                                        padding: "20px 5px 20px",
                                        position: "relative",
                                        width: "100%",
                                        fontFamily: "Nunito, sans-serif",
                                        fontWeight: "400",
                                        color: "var(--textColor)",
                                        background: "var(--contentBackground)",
                                        boxShadow: "inset 0 -6px rgb(0 0 0 / 20%)",
                                        borderRadius: "7px"
                                    }
                                },
                                    (headerText = createElement("div", {
                                        className: "headerText",
                                        style: {
                                            boxSizing: "border-box",
                                            display: "block",
                                            height: "45px",
                                            left: "-10px",
                                            padding: "4px 4px 8px",
                                            position: "absolute",
                                            top: "-28px",
                                            backgroundColor: "#ef7426",
                                            boxShadow: "0 4px rgb(0 0 0 / 20%), inset 0 -4px rgb(0 0 0 / 20%)",
                                            borderRadius: "7px"
                                        }
                                    },
                                        createElement("div", {
                                            style: {
                                                alignItems: "center",
                                                boxSizing: "border-box",
                                                display: "flex",
                                                height: "100%",
                                                justifyContent: "center",
                                                padding: "0 15px",
                                                width: "100%",
                                                fontFamily: "Titan One, sans-serif",
                                                fontSize: "26px",
                                                fontWeight: "400",
                                                textShadow: "-1px -1px 0 #646464, 1px -1px 0 #646464, -1px 1px 0 #646464, 2px 2px 0 #646464",
                                                color: "white",
                                                background: "linear-gradient(#fcd843,#fcd843 50%,#feb31a 50.01%,#feb31a)",
                                                borderRadius: "5px"
                                            }
                                        })
                                    ))
                                ))
                            ))
                        )
                ))
            );
            for (const oldGui of document.querySelectorAll("#JODGUI")) oldGui.remove();
            
            document.body.appendChild(guiWrapper);
            
            
            function addMode(mode, img, cheats, nameOnly) {
                const button = createElement("div", {
                    className: "cheatButton",
                    innerHTML: (typeof img == "string" ? `<img style="height: 30px; margin-right: 5px" src="${img}">` : img ? img : "") + mode,
                    onclick: () => setCheats(button.innerText, cheats, nameOnly)
                });
                cheatContainer.appendChild(button);
                return button.onclick;
            }
